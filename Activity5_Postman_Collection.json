{
	"info": {
		"_postman_id": "activity5-logging-rate-limit",
		"name": "Activity 5 - User Activity Logging & Rate Limiting",
		"description": "Test collection for user activity logging and rate limiting features",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000/api",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "1. Login Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('jwt_token', response.token);",
									"    pm.test('Login successful', () => {",
									"        pm.expect(response.message).to.include('successfully');",
									"    });",
									"    pm.test('Token received', () => {",
									"        pm.expect(response.token).to.not.be.empty;",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						},
						"description": "Test successful login and receive JWT token"
					}
				},
				{
					"name": "2. Login Failed (Wrong Password)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"wrong_password\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						},
						"description": "Test failed login - should create FAILED_LOGIN log"
					}
				},
				{
					"name": "3. Rate Limit Test - Login (Run 6 times)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"wrong_password_{{$randomInt}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": ["{{base_url}}"],
							"path": ["auth", "login"]
						},
						"description": "Run this 6 times to trigger rate limiting (5 attempts allowed)"
					}
				},
				{
					"name": "4. Signup Test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test User {{$randomInt}}\",\n    \"email\": \"test_{{$randomInt}}@example.com\",\n    \"password\": \"test123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": ["{{base_url}}"],
							"path": ["auth", "signup"]
						},
						"description": "Test user signup - should create SIGNUP_SUCCESS log"
					}
				},
				{
					"name": "5. Forgot Password Test",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": ["{{base_url}}"],
							"path": ["auth", "forgot-password"]
						},
						"description": "Test forgot password - should create FORGOT_PASSWORD log"
					}
				}
			]
		},
		{
			"name": "Activity Logs",
			"item": [
				{
					"name": "1. Get My Logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has logs data', () => {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/logs/my-logs?limit=20",
							"host": ["{{base_url}}"],
							"path": ["logs", "my-logs"],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Get current user's activity logs"
					}
				},
				{
					"name": "2. Get All Logs (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has logs data', () => {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data).to.be.an('array');",
									"    pm.expect(response.pagination).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/logs/all?limit=30&page=1",
							"host": ["{{base_url}}"],
							"path": ["logs", "all"],
							"query": [
								{
									"key": "limit",
									"value": "30"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						},
						"description": "Get all activity logs (admin only)"
					}
				},
				{
					"name": "3. Get Activity Statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has statistics', () => {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.true;",
									"    pm.expect(response.data.summary).to.exist;",
									"    pm.expect(response.data.actionStats).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/logs/stats",
							"host": ["{{base_url}}"],
							"path": ["logs", "stats"]
						},
						"description": "Get activity statistics (admin only)"
					}
				},
				{
					"name": "4. Get Logs with Filters",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwt_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/logs/all?action=LOGIN_SUCCESS&limit=10",
							"host": ["{{base_url}}"],
							"path": ["logs", "all"],
							"query": [
								{
									"key": "action",
									"value": "LOGIN_SUCCESS"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get logs filtered by action type"
					}
				}
			]
		},
		{
			"name": "Rate Limiting Tests",
			"item": [
				{
					"name": "Signup Rate Limit (Run 4 times)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Rate Test {{$randomInt}}\",\n    \"email\": \"ratetest_{{$randomInt}}@example.com\",\n    \"password\": \"test123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": ["{{base_url}}"],
							"path": ["auth", "signup"]
						},
						"description": "Run 4 times to test signup rate limiting (3 allowed per hour)"
					}
				},
				{
					"name": "Forgot Password Rate Limit (Run 4 times)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/forgot-password",
							"host": ["{{base_url}}"],
							"path": ["auth", "forgot-password"]
						},
						"description": "Run 4 times to test forgot password rate limiting (3 allowed per hour)"
					}
				}
			]
		}
	]
}