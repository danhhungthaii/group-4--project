/**
 * Change Password Page Component
 * ƒê·ªïi m·∫≠t kh·∫©u
 */

import React, { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate } from 'react-router-dom';
import { 
  selectUser, 
  selectIsLoading, 
  selectError,
  clearError 
} from '../store/slices/authSlice';

const ChangePasswordPage = () => {
  const dispatch = useDispatch();
  const navigate = useNavigate();
  
  const user = useSelector(selectUser);
  const isLoading = useSelector(selectIsLoading);
  const error = useSelector(selectError);

  const [formData, setFormData] = useState({
    currentPassword: '',
    newPassword: '',
    confirmPassword: ''
  });

  const [formError, setFormError] = useState('');
  const [message, setMessage] = useState('');

  useEffect(() => {
    return () => {
      dispatch(clearError());
    };
  }, [dispatch]);

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    
    // Clear form errors when user types
    if (formError) {
      setFormError('');
    }
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    // Validation
    if (formData.newPassword !== formData.confirmPassword) {
      setFormError('M·∫≠t kh·∫©u m·ªõi v√† x√°c nh·∫≠n m·∫≠t kh·∫©u kh√¥ng kh·ªõp');
      return;
    }

    if (formData.newPassword.length < 6) {
      setFormError('M·∫≠t kh·∫©u m·ªõi ph·∫£i c√≥ √≠t nh·∫•t 6 k√Ω t·ª±');
      return;
    }

    // Mock password change (since we're using mock authentication)
    setMessage('‚úÖ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i. (Demo)');
    
    setTimeout(() => {
      navigate('/profile');
    }, 3000);
  };

  const handleCancel = () => {
    navigate('/profile');
  };

  return (
    <div className="change-password-page">
      <div className="change-password-container">
        <div className="page-header">
          <h2>üîí ƒê·ªïi m·∫≠t kh·∫©u</h2>
          <button onClick={handleCancel} className="back-button">
            ‚Üê Quay l·∫°i Profile
          </button>
        </div>

        {error && (
          <div className="error-message">
            {error}
          </div>
        )}

        {formError && (
          <div className="error-message">
            {formError}
          </div>
        )}

        {message && (
          <div className="success-message">
            {message}
          </div>
        )}

        <form onSubmit={handleSubmit} className="change-password-form">
          <div className="form-section">
            <h3>Th√¥ng tin x√°c th·ª±c</h3>
            
            <div className="form-group">
              <label htmlFor="currentPassword">M·∫≠t kh·∫©u hi·ªán t·∫°i:</label>
              <input
                type="password"
                id="currentPassword"
                name="currentPassword"
                value={formData.currentPassword}
                onChange={handleChange}
                required
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u hi·ªán t·∫°i"
              />
            </div>

            <div className="form-group">
              <label htmlFor="newPassword">M·∫≠t kh·∫©u m·ªõi:</label>
              <input
                type="password"
                id="newPassword"
                name="newPassword"
                value={formData.newPassword}
                onChange={handleChange}
                required
                placeholder="Nh·∫≠p m·∫≠t kh·∫©u m·ªõi (√≠t nh·∫•t 6 k√Ω t·ª±)"
                minLength="6"
              />
            </div>

            <div className="form-group">
              <label htmlFor="confirmPassword">X√°c nh·∫≠n m·∫≠t kh·∫©u m·ªõi:</label>
              <input
                type="password"
                id="confirmPassword"
                name="confirmPassword"
                value={formData.confirmPassword}
                onChange={handleChange}
                required
                placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u m·ªõi"
                minLength="6"
              />
            </div>
          </div>

          <div className="password-requirements">
            <h4>üõ°Ô∏è Y√™u c·∫ßu m·∫≠t kh·∫©u:</h4>
            <ul>
              <li className={formData.newPassword.length >= 6 ? 'valid' : ''}>
                ‚úì √çt nh·∫•t 6 k√Ω t·ª±
              </li>
              <li className={formData.newPassword && formData.confirmPassword && formData.newPassword === formData.confirmPassword ? 'valid' : ''}>
                ‚úì M·∫≠t kh·∫©u x√°c nh·∫≠n ph·∫£i kh·ªõp
              </li>
            </ul>
          </div>

          <div className="form-actions">
            <button 
              type="submit" 
              className="save-button"
              disabled={isLoading || !formData.currentPassword || !formData.newPassword || !formData.confirmPassword}
            >
              {isLoading ? 'üîÑ ƒêang c·∫≠p nh·∫≠t...' : 'üîí ƒê·ªïi m·∫≠t kh·∫©u'}
            </button>
            
            <button 
              type="button" 
              onClick={handleCancel}
              className="cancel-button"
            >
              ‚ùå H·ªßy b·ªè
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default ChangePasswordPage;